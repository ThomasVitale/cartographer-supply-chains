#@ load("@ytt:data", "data")
#@ load("/helpers.star", "config_writer")

#@ if/end data.values.supply_chain == "advanced":
---
apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  name: supply-chain-advanced
spec:
  selector:
    apps.kadras.io/workload-type: web

  resources:
    - name: source-provider
      templateRef:
        kind: ClusterSourceTemplate
        name: supplychain-source-template
      params:
        - name: gitCredentialsSecret
          default: #@ data.values.git_credentials_secret
        - name: serviceAccount
          default: #@ data.values.service_account
    
    - name: source-tester
      templateRef:
        kind: ClusterSourceTemplate
        options:
          - name: tekton-test-source-template
            selector:
              matchExpressions:
                - { key: apps.kadras.io/has-tests, operator: Exists }
          - passThrough: source
            selector:
              matchExpressions:
                - { key: apps.kadras.io/has-tests, operator: DoesNotExist }
      sources:
        - resource: source-provider
          name: source
    
    - name: source-scanner
      templateRef:
        kind: ClusterSourceTemplate
        name: tekton-scan-source-template
      sources:
        - resource: source-tester
          name: source

    - name: image-builder
      templateRef:
        kind: ClusterImageTemplate
        name: kpack-template
      params:
        - name: clusterBuilder
          default: #@ data.values.cluster_builder
        - name: registry
          value: #@ data.values.registry
        - name: serviceAccount
          default: #@ data.values.service_account
      sources:
        - resource: source-scanner
          name: source
    
    - name: image-scanner
      templateRef:
        kind: ClusterImageTemplate
        name: tekton-scan-image-template
      images:
        - resource: image-builder
          name: image
    
    - name: convention-provider
      templateRef:
        kind: ClusterConfigTemplate
        name: convention-template
      params:
        - name: serviceAccount
          default: #@ data.values.service_account
      images:
      - resource: image-scanner
        name: image
    
    - name: config-provider
      templateRef:
        kind: ClusterConfigTemplate
        name: knative-config-template
      configs:
        - resource: convention-provider
          name: config
    
    - name: config-writer
      templateRef:
        kind: ClusterTemplate
        name: #@ config_writer()
      params:
        - name: ca_cert_data
          value: #@ data.values.ca_cert_data
        - name: gitops
          default: #@ data.values.gitops
        - name: registry
          value: #@ data.values.registry
        - name: serviceAccount
          default: #@ data.values.service_account
      configs:
        - resource: config-provider
          name: config     
    
    - name: deliverable
      templateRef:
        kind: ClusterTemplate
        name: deliverable-template
      params:
        - name: gitCredentialsSecret
          default: #@ data.values.git_credentials_secret
        - name: gitops
          default: #@ data.values.gitops
        - name: registry
          value: #@ data.values.registry
