#@ load("@ytt:data", "data")

#@ if/end "app-gitops-deployment-template" not in data.values.excluded_blueprints:
---
apiVersion: carto.run/v1alpha1
kind: ClusterTemplate
metadata:
  name: app-gitops-deployment-template
  annotations:
    doc: |
      Consumes application deployment configuration via GitOps
      and uses it as the source for deployment on the current cluster.
spec:
  params:
    - name: serviceAccount
      default: default
  
  healthRule:
    multiMatch:
      healthy:
        matchConditions:
          - type: ReconcileSucceeded
            status: 'True'
      unhealthy:
        matchFields:
          - key: 'status.conditions[?(@.type=="ReconcileFailed")].status'
            operator: 'In'
            values: ['True']
            messagePath: '.status.usefulErrorMessage'

  ytt: |
    #@ load("@ytt:data", "data")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    ---
    apiVersion: kappctrl.k14s.io/v1alpha1
    kind: App
    metadata:
      name: #@ data.values.workload.metadata.name + "-delivery"
      labels: #@ merge_labels({ "app.kubernetes.io/component": "deploy" })
    spec:
      serviceAccountName: #@ data.values.params.serviceAccount
      syncPeriod: 1m0s
      fetch:
        - inline:
            paths:
              deliverable.yml: #@ data.values.config.deliverable
      template:
        - ytt: {}
        - kbld: {}
      deploy:
        - kapp: {}
